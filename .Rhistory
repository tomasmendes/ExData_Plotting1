install.packages("KernSmooth")
library("KernSmooth")
3^3
f<- function(x,y) {3}
f(3
)
f(3,4
)
f<- function(x,y) {x+y}
f(3)
f(3,4)
f(3)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <-1:10
x<-
0
x <-1:10
x<2
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
read.file
library(datasets)
data(cars)
head(cars_)
head(cars)
summary(cars)
with(cars, plot(speed, dist))
library(ggplot)
library(ggplot2)
libraru(lattice)
library(lattice)
cars$cat = rand()
cars$cat = c("A","b")
head(cars)
xyplot(dist ~ speed | cat)
xyplot(dist ~ speed | cat, data=cars)
xyplot(dist ~ speed | cat, data=cars, layout = c(2,1))
xyplot(dist ~ speed | cat, data=cars, layout = c(1,2))
library(ggplot2)
hist(cars$speed)
plot(cars$speed, cars$dist)
?par
plot(cars$speed, cars$dist)
boxplot(speed ~ cat, data=cars)
hist(speed ~ cat, data=cars)
hist(cars$speed)
?with
plot(cars$speed, cars$dist)
plot(cars$speed, cars$cat)
cars$cat
plot(cars$speed, cars$cat)
plot(cars$speed, cars$cat)
plot(cars$speed, cars$dist)
par("lty")
part("xtab")
par("bg")
title(main = "Title")
windows()
windows()
plot(cars$speed, cars$dist)
windows()
?devices
?Devices
dev.cur()
set.seed(123)
get.seed(123)
table(c("J","j","a","b"))
table(c("j","j","a","b"))
?table
str(table(c("j","j","a","b")))
x <- 1:20
c <- kmeans(x,4)
table(c)
c
c$cluster
names(c$cluster)
table(c$cluster)
plot(c$cluster, x)
hist(x)
plot(x)
dotplot(x)
?plot
plot(c$cluster, x, type="h")
?plot
plot(c$cluster, x, type="s")
?plot
plot(c$cluster, x, type="s")
plot(c$cluster, x, type="l")
plot(c$cluster, x, type="b")
dt <- data.table(cluster = c$cluster, value = x)
dt <- data.frame(cluster = c$cluster, value = x)
dt
?sort
dt[order(dt$cluster)]
str(dt)
dt[order(dt$cluster),]
dt <- dt[sort(dt$cluster),]
plot(c$cluster, x, type="b")
plot(dt$cluster, dt$values, type="b")
str(dt)
plot(dt$cluster, dt$value, type="b")
summary(dt)
dt
plot(x)
pllot(c(1,3,6,2,6,8,1,4,6,73,34,6,1,4,6,8,8))
plot(c(1,3,6,2,6,8,1,4,6,73,34,6,1,4,6,8,8))
?lattice
library(lattice)
?lattice
?histogram
histogram(c(1,3,6,2,6,8,1,4,6,73,34,6,1,4,6,8,8))
x <- c(1,3,6,2,6,8,1,4,6,73,34,6,1,4,6,8,8)
hist(x)
x
x <- c(1,3,6,2,6,8,1,4,6,6,1,4,6,8,8)
hist(x)
x <- as.integer(x)
hist(x)
x
?histogram(x)
histogram(x)
?histogram
densityplot(x)
?histogram
densityplot(x, xlim=range(min(x),max(x)))
?histogram
densityplot(x ~ x | x, xlim=range(min(x),max(x)))
?heat.colors
heat.colors(5)
libraru(ggplot2)
library(ggplot2)
x <- 1:10
y <- 1:10 * 5
z <- rep(c("a","b"), each = 5)
dt <- data.frame(x,y,z)
summary(dt)
qplot(x,y,data=dt)
qplot(x,y,data=dt, color = z)
qplot(x,y,data=dt, color = z, geom = c("smooth"))
qplot(x,y,data=dt, color = z, geom = c("point","smooth"))
warnings()
qplot(x, data=dt, fill=z)
qplot(x,y,data=dt, fill = z, geom = c("point","smooth"))
qplot(x,y,data=dt, fill = z
)
qplot(x,data=dt, fill = z
)
qplot(dt$x)
qplot(dt$x, fill=dt$z)
qplot(x,y,data=dt, color = z, geom = c("point","smooth"), facet=.~z)
qplot(x,y,data=dt, geom = c("point","smooth"), facet=.~z)
qplot(x,y,data=dt, geom = c("point","smooth"), facets=.~z)
qplot(x, data=dt, geom="density")
qplot(x, data=dt, geom="density", color=z)
?rnorm
rnorm(5,10, 1)
rnorm(n=5,10, 1)
qnorm(0.3, 5, 10)
setwd("~/pa1/exdata-data-household_power_consumption")
source('~/pa1/exdata-data-household_power_consumption/plot1.R')
?png
source('~/pa1/exdata-data-household_power_consumption/plot1.R')
dev.off()
lines(1:5,1:5)
lines(1:5,1:5)
windows
windows()
lines(1:5,1:5)
plot.new()
lines(1:5,1:5)
plot(1:5,1:5,type="l)
)
)
""
)
plot(1:5,1:5,type="l")
plot(1:5,c(1,4,2,6,7),type="l")
str(fsub)
plot(fsub$global_active_power, fsub$Time)
str(fsub)
plot(fsub$Global_active_power, fsub$Time)
summary(fsub$Time)
summary(Date)
summary(fsub$Date)
cbind(fsub$Date, fsub$Time)
fsub$Time
plot(fsub$Time, fsub$Global_active_power)
plot(fsub$Time, fsub$Global_active_power, type="l")
nrows(fsub)
length(fsub)
str(fsub)
as.string(fsub$Date)
?strptime
?date
?as.Date
source('~/pa1/exdata-data-household_power_consumption/plot1.R')
source('~/pa1/exdata-data-household_power_consumption/plot1.R')
f$Date
f$concatDate <- paste(f$Date, f$Time, sep=" ")
head(f$concatDate)
strp(head(f$concatDate), format="%d/%m/%Y %H:%M:%S")
strptime(head(f$concatDate), format="%d/%m/%Y %H:%M:%S")
setwd("~/GitHub/ExData_Plotting1")
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
source('~/GitHub/ExData_Plotting1/plot2.R')
min < max
head$fsub > min
head(tf$Date > min)
fsub$mind <- min
tf$mind <- min
summary(tf$Date >= tf$mind)
